{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d9584e3f",
   "metadata": {},
   "source": [
    "# üè† Train House Price Model (Dev)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "31606934",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-02T13:55:40.454819Z",
     "iopub.status.busy": "2025-05-02T13:55:40.454547Z",
     "iopub.status.idle": "2025-05-02T13:55:40.863216Z",
     "shell.execute_reply": "2025-05-02T13:55:40.862710Z",
     "shell.execute_reply.started": "2025-05-02T13:55:40.454799Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: $29,081.30\n",
      "üìÑ Log saved to train_log.txt\n",
      "2025-05-02 09:55:40 | TRAIN | model=RandomForestRegressor | MAE=29081.30 | saved=dev\n",
      "\n"
     ]
    }
   ],
   "source": [
    "\n",
    "import pandas as pd\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "import joblib\n",
    "\n",
    "# Load data\n",
    "df = pd.read_csv(\"../data/house_price_data.csv\")\n",
    "X = df.drop(\"price\", axis=1)\n",
    "y = df[\"price\"]\n",
    "\n",
    "# Split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Train model\n",
    "model = RandomForestRegressor(n_estimators=100, random_state=42)\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Evaluate\n",
    "preds = model.predict(X_test)\n",
    "mae = mean_absolute_error(y_test, preds)\n",
    "print(f\"MAE: ${mae:,.2f}\")\n",
    "\n",
    "# Save model\n",
    "joblib.dump(model, \"../models/dev/house_price_model.pkl\")\n",
    "\n",
    "from datetime import datetime\n",
    "import os\n",
    "\n",
    "timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n",
    "log_entry = f\"{timestamp} | TRAIN | model=RandomForestRegressor | MAE={mae:.2f} | saved=dev\\n\"\n",
    "\n",
    "os.makedirs(\"../logs\", exist_ok=True)\n",
    "with open(\"../logs/train_log.txt\", \"a\") as log_file:\n",
    "    log_file.write(log_entry)\n",
    "\n",
    "print(\"üìÑ Log saved to train_log.txt\")\n",
    "print(log_entry)\n",
    "\n",
    "# Save test sets for evaluation later\n",
    "X_test.to_csv(\"../data/X_test.csv\", index=False)\n",
    "y_test.to_csv(\"../data/y_test.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fab5df45-75a8-4ccf-a5c3-13ce69efb54f",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.11.5",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
